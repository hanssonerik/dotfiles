# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change prefix to ctrl-a (act like GNU screen)

unbind C-b
set-option -g prefix C-a
set-option -g prefix2 C-b

# Set clipboard
set -g set-clipboard on
# Start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
# Renumber windows sequentially after closing any of them
set -g renumber-windows on
# short escape-time
set -sg escape-time 10
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -g default-terminal "screen-256color"
# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# Start window numbers at 1 to match keyboard order with tmux window order
set-window-option -g pane-base-index 1
# Copy-mode
set-window-option -g mode-keys vi
# Mouse
set -g mouse on
unbind -T copy-mode-vi Enter
# Set window border
# Active window title color
#set inactive/active window styles
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour250,bg=black'

# set the pane border colors 
# set -g pane-border-style 'fg=blue,bg=blue' 
# set -g pane-active-border-style 'fg=red,bg=red'
# set -wg mode-style bg=red,fg=red
# set -g pane-active-border-style bg=default,fg=magenta
# set -g pane-border-style fg=default
# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix c
bind-key c new-window -c "#{pane_current_path}"
# prefix a
bind-key a send-prefix
# prefix |
bind-key i split-window -h -c "#{pane_current_path}"
#
# # prefix -
bind-key o split-window -c "#{pane_current_path}"
# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-
# Pane switching
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U
bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-
# Switch to last pane
bind-key C-a last-pane
# Resize panes using PREFIX H, J, K, L
bind-key H resize-pane -L 5
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key L resize-pane -R 5
# Reload tmux configuration
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded ~/.tmux.conf"
# [ & ] is awful to write on Swedish keyboard
bind-key Escape copy-mode
bind-key p paste-buffer
# Kill current session
bind-key Q kill-window
# Make copy mode behave (a little) like vim
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi 'r' send -X rectangle-toggl
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle
# join pane
# pane movement
bind-key ä command-prompt -p "join pane from:"  "join-pane -s :'%%'"
bind-key ö command-prompt -p "send pane to:"  "join-pane -t :'%%'"
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -sel clip"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -sel clip"


## tart
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="pgrep fzf"
bind-key -n 'C-h' if-shell "$is_vim || $is_fzf" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

set -g @yank_action 'copy-pipe'
set -g @yank_selection_mouse 'clipboard'
## end

# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
# -------------------------------------------------------------------
# Decoration (256-color)
# -------------------------------------------------------------------
set-option -g status-justify left
set-option -g status-left ''
set-option -g status-bg colour238
set-option -g status-right '#[fg=yellow] #(whoami) #[fg=white]at #[fg=yellow]#h #{battery_status_fg}#{battery_percentage}#{cpu_fg_color}#{cpu_percentage} #[fg=magenta]#(date "+%d %b %H:%M")'
set-option -g status-interval 60
set-option -g pane-active-border-style fg=green
set-option -g pane-border-style fg=colour238
set-window-option -g window-status-format '#[bg=colour238]#[fg=colour247] #I #W '
set-window-option -g window-status-current-format '#[bg=colour235]#[fg=green] #I #W#F '
# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
bind-key C-t run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(~/.vim/plugged/tmux-complete.vim/sh/tmuxcomplete | fzf --multi | paste -sd\\  -)\"'"
# -------------------------------------------------------------------
# Plugins
# -------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
